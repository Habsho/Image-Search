{"ast":null,"code":"var _jsxFileName = \"/home/habsho/Documents/all projects/react-image-search-master/src/components/App/App.js\";\nimport React from \"react\";\nimport ImageList from \"../ImageList/ImageList\";\nimport ImageSearch from \"../ImageSearch/ImageSearch\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      images: [],\n      error: null\n    };\n\n    this.handleMakeRequest = async e => {\n      e.preventDefault();\n      const searchValue = e.target.elements.searchValue.value;\n      const request = await fetch(`https://pixabay.com/api/?key=${\"15232852-52b4f08c5cde444c3e5131719\"}&q=${searchValue}&per_page=15`);\n      const results = await request.json();\n\n      if (!searchValue) {\n        this.setState({\n          error: \"Please provide a value.\"\n        });\n      } else {\n        this.setState({\n          images: results.hits,\n          error: null\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(ImageSearch, {\n      handleMakeRequest: this.handleMakeRequest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), this.state.error !== null ? React.createElement(\"div\", {\n      style: {\n        color: \"#fff\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, this.state.error) : React.createElement(ImageList, {\n      images: this.state.images,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/habsho/Documents/all projects/react-image-search-master/src/components/App/App.js"],"names":["React","ImageList","ImageSearch","App","Component","state","images","error","handleMakeRequest","e","preventDefault","searchValue","target","elements","value","request","fetch","results","json","setState","hits","render","color","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE;AAFD,KADwB;;AAAA,SAKhCC,iBALgC,GAKZ,MAAMC,CAAN,IAAW;AAC7BA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,WAAW,GAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,WAAlB,CAA8BG,KAAlD;AACA,YAAMC,OAAO,GAAG,MAAMC,KAAK,CACxB,gCAA+B,oCAAqC,MAAKL,WAAY,cAD7D,CAA3B;AAGA,YAAMM,OAAO,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAtB;;AACA,UAAI,CAACP,WAAL,EAAkB;AAChB,aAAKQ,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAE;AAAT,SAAd;AACD,OAFD,MAEO;AACL,aAAKY,QAAL,CAAc;AAAEb,UAAAA,MAAM,EAAEW,OAAO,CAACG,IAAlB;AAAwBb,UAAAA,KAAK,EAAE;AAA/B,SAAd;AACD;AACF,KAjB+B;AAAA;;AAkBhCc,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAa,MAAA,iBAAiB,EAAE,KAAKb,iBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEG,KAAKH,KAAL,CAAWE,KAAX,KAAqB,IAArB,GACC;AAAK,MAAA,KAAK,EAAE;AAAEe,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKlB,KAAL,CAAWE,KADd,CADD,GAKC,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADF;AAYD;;AA/B+B;;AAkClC,eAAeH,GAAf","sourcesContent":["import React from \"react\";\n\nimport ImageList from \"../ImageList/ImageList\";\nimport ImageSearch from \"../ImageSearch/ImageSearch\";\n\nclass App extends React.Component {\n  state = {\n    images: [],\n    error: null\n  };\n  handleMakeRequest = async e => {\n    e.preventDefault();\n    const searchValue = e.target.elements.searchValue.value;\n    const request = await fetch(\n      `https://pixabay.com/api/?key=${\"15232852-52b4f08c5cde444c3e5131719\"}&q=${searchValue}&per_page=15`\n    );\n    const results = await request.json();\n    if (!searchValue) {\n      this.setState({ error: \"Please provide a value.\" });\n    } else {\n      this.setState({ images: results.hits, error: null });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <ImageSearch handleMakeRequest={this.handleMakeRequest} />\n        {this.state.error !== null ? (\n          <div style={{ color: \"#fff\", textAlign: \"center\" }}>\n            {this.state.error}\n          </div>\n        ) : (\n          <ImageList images={this.state.images} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}